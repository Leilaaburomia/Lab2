---
title: "Lab 2 work"
format: html
editor: visual
---

```{r}
library(dplyr)
library(stringr)
tree_data <- readr::read_csv("data/tree_dat.csv")
```

## 1. Filtering rows

### Question 1: Read in the Minnesota tree growth dataset. Use glimpse to understand the structure and names of the dataset. Describe the structure and what you see in the dataset?

This dataset seems to be structured data with numerical and categorical variables. It contains 131,386 x rows (number of trees recorded) and 8 y columns (different tree characteristics). The columns include treeID, standID, stand, year, species, age, inc, and rad_ib. The data types include character for species and location, and double for the other columns.

```{r}
## Question 1 

glimpse(tree_data)
```

### Question 2: How many records have been made in stand 1?

28,121 records have been made in stand 1.

```{r}
## Question 2

tree_data %>%
  filter(str_detect(stand, "1")) %>%
  summarize(stand1records = n())
  
```

### Question 3: How many records of the Abies balsamea and Pinus strobus species have been made?

17,221 records of the Abies balsamea and Pinus strobus species have been made.

```{r}
## Question 3

tree_data %>%
  filter(species == "ABBA" | species == "PIST") %>%
  summarize(ABBAandPIST = n())
```

### Question 4: How many trees are older then 200 years old in the last year of the dataset?

246 trees are older than 200 years old in 2007.

```{r}
## Question 4

last_year <- max(tree_data$year, na.rm = TRUE)

tree_data %>%
  filter(age < "200" & year == last_year) %>%
  summarize(oldtrees = n())
```
 
## 2. Slicing Rows 

### Question 5: What is the oldest tree in the dataset found using slice_max?

The oldest tree is 269 years old. 

```{r}
## Question 5

tree_data %>%
  slice_max(order_by = age, n = 3) 
  
```

### Question 6: Find the oldest 5 trees recorded in 2001. Use the help docs to understand optional parameters

The oldest 5 trees recorded in 2001 are treeID 24(263 yrs), 25(259 yrs), 1595(212 yrs), 1598(206 yrs), 1712(206 yrs). 

```{r}
## Question 6 

tree_data %>%
  filter(year == 2001) %>%
  slice_max(order_by = age, n = 5) 
 
```

## Question 7: Using slice_sample, how many trees are in a 30% sample of those recorded in 2002?

687 trees are in a 30% sample of those recorded in 2002. 

```{r}
## Question 7

tree_data %>%
  filter(year == 2002) %>%
  slice_sample(prop = 0.3) %>%
  summarize(sample_size = n())
```

## 3. Arranging Rows 

### Question 8: Filter all trees in stand 5 in 2007. Sort this subset by descending radius at breast height (rad_ib) and use slice_head() to get the top three trees. Report the tree IDs

The top three trees in stand 5 in 2007 are 120, 2183, 119. 

```{r}

## Question 8 

tree_data %>%
  filter(str_detect(stand, "5") & year == 2007) %>%
  arrange(desc(rad_ib)) %>%
  slice_head(n = 3) %>%
  select(treeID)
```

## 4. Reducing Columns 

### Question 9: Reduce your full data.frame to [treeID, stand, year, and radius at breast height]. Filter to only those in stand 3 with records from 2007, and use slice_min to pull the smallest three trees meaured that year.

The three smallest trees measured that year are 1514, 1103, 1508. 

```{r}
## Question 9

tree_data %>%
  filter(str_detect(stand, "3") & year == 2007) %>%
  slice_min(order_by = rad_ib, n = 3) %>%
  select(treeID, stand, year, rad_ib) 
```

### Question 10: Use select to remove the stand column. Use glimspe to show the dataset.

```{r}
## Question 10

tree_data %>%
  select(-stand) %>%
  glimpse()
```
Question 11: Look at the help document for dplyr::select and examine the “Overview of selection features”. Identify an option (there are multiple) that would help select all columns with the string “ID” in the name. Using glimpse to view the remaining dataset

```{r}
### Question 11

tree_data %>%
  select(ends_with("ID")) %>%
  glimpse()

```
Question 12: Find a selection pattern that captures all columns with either ‘ID’ or ‘stand’ in the name. Use glimpse to verify the selection.

```{r}
### Question 12

tree_data %>%
  select(contains("ID"), contains("stand"))
```

## 5. Renaming Columns 

### Question 13: Looking back at the data dictionary, rename rad_inc and inc to include _[unit] in the name. Unlike earlier options, be sure that this renaming is permanent, and stays with your data.frame (e.g. <-). Use glimpse to view your new data.frame.

```{r}
### Question 13

tree_data <- tree_data %>%
  rename(rad_ib_cm = rad_ib, inc_mm = inc)
  glimpse(tree_data)
```
## 6. Creating New Columns

Question 14: A key measurement in forestry in “basal area column”. The metric is computed with the formula:
BA(m2) = 0.00007854⋅DBH^2
Where DBH is the diameter at breast height (cm). Use mutate to compute DBH in centimeters, and BA in m2 (HINT: Make sure rad_ib is in cm prior to computing the diameter!). What is the mean BA_m2 of the the species POTR in 2007?

the mean BA_m2 of the species POTR in 2007 is 0.03696619 m2. 

```{r}
### Question 14

tree_data <- tree_data %>%
  mutate(
    rad_ib_cm = ifelse(rad_ib_cm > 10, rad_ib_cm / 10, rad_ib_cm),  
    DBH_cm = 2 * rad_ib_cm,  
    BA_m2 = 0.00007854 * (DBH_cm^2)  
  )


mean_BA_POTR_2007 <- tree_data %>%
  filter(species == "POTR", year == 2007) %>%
  summarise(mean_BA_m2 = mean(BA_m2, na.rm = TRUE))


print(mean_BA_POTR_2007)
```
## 7. case_when/if_else

Question 15: Lets say for the sake of our study, trees are not established until they are 5 years of age. Use if_else to add a boolean column to our dataset called established that is TRUE if the age is greater then 5 and FALSE if less then or equal to five. Once added, use count (see ?count) to determine how many records are from established trees?

122,503 records are from established trees. 

```{r}
## Question 15

tree_data <- tree_data %>%
  mutate(established = if_else(age > 5, TRUE, FALSE))

established_count <- tree_data %>%
  count(established)

print(established_count)
```
### Question 16: Use mutate and case_when to add a new column to you data.frame that classifies each tree into the proper DBH_class. Once done, limit your dataset to the year 2007 and report the number of each class with count.

The DBH classes consisted of 1963 records of pole, 252 records of sapling, and 76 records of sawlog. 

```{r}
### Question 16
tree_data <- tree_data %>%
  mutate(DBH_class = case_when(
    DBH_cm > 0 & DBH_cm < 2.5 ~ "seedling",
    DBH_cm >= 2.5 & DBH_cm < 10 ~ "sapling",
    DBH_cm >= 10 & DBH_cm < 30 ~ "pole",
    DBH_cm >= 30 ~ "sawlog")) 
  glimpse(tree_data)

```

```{r}
### Question 16 
tree_data <- tree_data %>% 
  filter(year == 2007) %>%
  count(DBH_class)

print(DBH_class_count)
```
## 8. Summarizing 


### Question 17: Compute the mean DBH (in cm) and standard deviation of DBH (in cm) for all trees in 2007. Explain the values you found and their statistical meaning.

The mean DBH (16.09351 cm) is the average diameter at breast height for trees in 2007. It represents a central measure of that year's tree sizes. The standard deviation of DBH (6.138643 cm) shows the amount of variability in DBH measurements. A larger SD shows a wider range of tree sizes and a smaller SD suggests that tree's DBH is closer to the mean. 

```{r}
### Question 17
tree_data <- tree_data %>%
  filter(year == 2007) %>%
  summarise(
    mean_DBH_cm = mean(DBH_cm, na.rm = TRUE), 
    sd_DBH_cm = sd(DBH_cm, na.rm = TRUE)
  )

  print(tree_data)
```
## 9. Grouped Data

### Question 18: Compute the per species mean tree age using only those ages recorded in 2003. Identify the three species with the oldest mean age.

The three species with the oldest mean age are Thuja occidentalis, Fraxinus nigra, Pinus strobus. 

```{r}
### Question 18
mean_tree_age2003 <- tree_data %>%
  filter(year == 2003) %>%
  group_by(species) %>%
  summarise(mean_age = mean(age, na.rm = TRUE)) %>%
  arrange(desc(mean_age)) %>%
  slice_head(n = 3)
  glimpse(mean_tree_age2003)
```
## 10. Counting 

### Question 19: In a single summarize call, find the number of unique years with records in the data set along with the first and last year recorded?

The number of unique years is 111 from 1897 to 2007. 

```{r}
### Question 19

tree_data %>%
  summarise(
    unique_years = n_distinct(year),
    first_year = min(year, na.rm = TRUE), 
    last_year = max(year, na.rm = TRUE)
  )
```
### Question 20: Determine the stands with the largest number of unique years recorded. Report all stands with largest (or tied with the largest) temporal record.

The stands with the largest number of unique years recorded are "A1", "D1", "D2", "D3", and "F1". 

```{r}
### Question 20

stands_with_longest_record <- tree_data %>%
  group_by(stand) %>%
  summarise(unique_years = n_distinct(year)) %>%
  filter(unique_years == max(unique_years, na.rm = TRUE))
  glimpse(stands_with_longest_record)
  
```
## Final Question 

We are interested in the annual DBH growth rate of each species through time, but we only want to include trees with at least a 10 year growth record. To identify this, we need to identify the per year growth made by each tree, there total growth record, and then average that, and compute the standard deviation, across the species.

Use a combination of dplyr verbs to compute these values and report the 3 species with the fastest growth, and the 3 species with the slowest growth. (** You will need to use either lag() or diff() in your computation. You can learn more about each in the Help pages)

Lastly, find and include an image of the fastest growing species. Add the image to your images directory.


The 3 species with the fastest growth in order are Pinus banksiana, Populus tremuloides , Picea glauca. The 3 species with the slowest growth in order from slowest to fastest are Larix laricina, Quercus rubra, and Abies balsamea. 

```{r}
### Final Question 

tree_growth <- tree_data %>%
  group_by(treeID) %>%
  arrange(year) %>%
  mutate(
    annual_DBH_growth = DBH_cm - lag(DBH_cm),
    record_years = n()
  ) %>%
  ungroup()

tree_growth_10yr <- tree_growth %>%
  group_by(treeID) %>%
  filter(n() >= 10) %>%
  ungroup()

species_growth <- tree_growth_10yr %>%
  group_by(treeID, species) %>%
  summarise(
    avg_growth_tree = mean(annual_DBH_growth, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  group_by(species) %>%
  summarize(
    mean_annual_growth = mean(avg_growth_tree, na.rm = TRUE),
    sd_annual_growth = sd(avg_growth_tree, na.rm = TRUE),
    n_trees = n(),
    .groups = "drop"
  )
fastest_growth <- species_growth %>%
  arrange(desc(mean_annual_growth)) %>%
  slice_head(n = 3)

slowest_growth <- species_growth %>%
  arrange(mean_annual_growth) %>%
  slice_head(n = 3)

  glimpse(fastest_growth)
  glimpse(slowest_growth)

```

